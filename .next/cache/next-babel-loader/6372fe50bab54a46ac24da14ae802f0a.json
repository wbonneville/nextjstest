{"ast":null,"code":"var _jsxFileName = \"/Users/wesleybonneville/workspace/nextjstest/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Markdown from \"react-markdown\";\nimport Layout from \"../../components/MyLayout\"; // export default function Post() {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>\n//     {props.show.image ? <img src={props.show.image.medium} /> : null}\n//   </Layout>\n// );\n// Post.getInitialProps = async function(context) {\n//   // context object contains a query object\n//   // destructuring. get id from query\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n//   console.log(`Fetched show: ${show.name}`);\n//   return { show };\n// };\n// export default Post;\n\nexport default (function () {\n  var router = useRouter();\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"jsx-243598287\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, router.query.id), __jsx(\"div\", {\n    className: \"jsx-243598287\" + \" \" + \"markdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/link).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n      \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"243598287\",\n    __self: this\n  }, \".markdown{font-family:\\\"Arial\\\";}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy93ZXNsZXlib25uZXZpbGxlL3dvcmtzcGFjZS9uZXh0anN0ZXN0L3BhZ2VzL3AvW2lkXS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RHlCLEFBRytCLEFBSUMsQUFLVCxBQUlILFNBQ0MsR0FKWixPQUsyQixDQWQzQix3QkFlQSxNQVhhLFdBQ2IiLCJmaWxlIjoiL1VzZXJzL3dlc2xleWJvbm5ldmlsbGUvd29ya3NwYWNlL25leHRqc3Rlc3QvcGFnZXMvcC9baWRdLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5pbXBvcnQgTWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5cbmltcG9ydCBMYXlvdXQgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvTXlMYXlvdXRcIjtcblxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9zdCgpIHtcbi8vICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPGgxPntyb3V0ZXIucXVlcnkuaWR9PC9oMT5cbi8vICAgICAgIDxwPlRoaXMgaXMgdGhlIGJsb2cgcG9zdCBjb250ZW50LjwvcD5cbi8vICAgICA8L0xheW91dD5cbi8vICAgKTtcbi8vIH1cblxuLy8gY29uc3QgUG9zdCA9IHByb3BzID0+IChcbi8vICAgPExheW91dD5cbi8vICAgICA8aDE+e3Byb3BzLnNob3cubmFtZX08L2gxPlxuLy8gICAgIDxwPntwcm9wcy5zaG93LnN1bW1hcnkucmVwbGFjZSgvPFsvXT9bcGJdPi9nLCBcIlwiKX08L3A+XG4vLyAgICAge3Byb3BzLnNob3cuaW1hZ2UgPyA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5tZWRpdW19IC8+IDogbnVsbH1cbi8vICAgPC9MYXlvdXQ+XG4vLyApO1xuXG4vLyBQb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uKGNvbnRleHQpIHtcbi8vICAgLy8gY29udGV4dCBvYmplY3QgY29udGFpbnMgYSBxdWVyeSBvYmplY3Rcbi8vICAgLy8gZGVzdHJ1Y3R1cmluZy4gZ2V0IGlkIGZyb20gcXVlcnlcbi8vICAgY29uc3QgeyBpZCB9ID0gY29udGV4dC5xdWVyeTtcbi8vICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKTtcbi8vICAgY29uc3Qgc2hvdyA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbi8vICAgY29uc29sZS5sb2coYEZldGNoZWQgc2hvdzogJHtzaG93Lm5hbWV9YCk7XG5cbi8vICAgcmV0dXJuIHsgc2hvdyB9O1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgUG9zdDtcblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgcmV0dXJuIChcbiAgICA8TGF5b3V0PlxuICAgICAgPGgxPntyb3V0ZXIucXVlcnkuaWR9PC9oMT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFya2Rvd25cIj5cbiAgICAgICAgPE1hcmtkb3duXG4gICAgICAgICAgc291cmNlPXtgXG5UaGlzIGlzIG91ciBibG9nIHBvc3QuXG5ZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cbkFuZCB3ZSBjYW4gaGF2ZSBhIHRpdGxlIGFzIHdlbGwuXG5cbiMjIyBUaGlzIGlzIGEgdGl0bGVcblxuQW5kIGhlcmUncyB0aGUgY29udGVudC5cbiAgICAgIGB9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIC5tYXJrZG93biB7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiQXJpYWxcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIC5tYXJrZG93biBhIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgY29sb3I6IGJsdWU7XG4gICAgICAgIH1cblxuICAgICAgICAubWFya2Rvd24gYTpob3ZlciB7XG4gICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICB9XG5cbiAgICAgICAgLm1hcmtkb3duIGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4gICk7XG59O1xuIl19 */\\n/*@ sourceURL=/Users/wesleybonneville/workspace/nextjstest/pages/p/[id].js */\"));\n});","map":{"version":3,"sources":["/Users/wesleybonneville/workspace/nextjstest/pages/p/[id].js"],"names":["useRouter","Markdown","Layout","router","query","id"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,gBAAe,YAAM;AACnB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,MAAM,CAACC,KAAP,CAAaC,EAAlB,CADF,EAEE;AAAA,uCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,MAAM,2JADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF;AAAA;AAAA;AAAA,iiGADF;AAsCD,CAxCD","sourcesContent":["import { useRouter } from \"next/router\";\nimport Markdown from \"react-markdown\";\n\nimport Layout from \"../../components/MyLayout\";\n\n// export default function Post() {\n//   const router = useRouter();\n\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n\n// const Post = props => (\n//   <Layout>\n//     <h1>{props.show.name}</h1>\n//     <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>\n//     {props.show.image ? <img src={props.show.image.medium} /> : null}\n//   </Layout>\n// );\n\n// Post.getInitialProps = async function(context) {\n//   // context object contains a query object\n//   // destructuring. get id from query\n//   const { id } = context.query;\n//   const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n//   const show = await res.json();\n\n//   console.log(`Fetched show: ${show.name}`);\n\n//   return { show };\n// };\n\n// export default Post;\n\nexport default () => {\n  const router = useRouter();\n  return (\n    <Layout>\n      <h1>{router.query.id}</h1>\n      <div className=\"markdown\">\n        <Markdown\n          source={`\nThis is our blog post.\nYes. We can have a [link](/link).\nAnd we can have a title as well.\n\n### This is a title\n\nAnd here's the content.\n      `}\n        />\n      </div>\n      <style jsx global>{`\n        .markdown {\n          font-family: \"Arial\";\n        }\n\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}</style>\n    </Layout>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}