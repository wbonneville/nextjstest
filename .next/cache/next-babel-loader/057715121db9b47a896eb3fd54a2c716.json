{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/wesleybonneville/workspace/nextjstest/pages/p/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Layout from \"../../components/MyLayout\"; // export default function Post() {\n//   const router = useRouter();\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n\nvar Post = function Post(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.show.name), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.show.summary.replace(/<[/]?[pb]>/g, \"\")), props.show.image ? __jsx(\"img\", {\n    src: props.show.image.medium,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }) : null);\n};\n\nPost.getInitialProps = function _callee(context) {\n  var id, res, show;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // context object contains a query object\n          // destructuring. get id from query\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/shows/\".concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          show = _context.sent;\n          console.log(\"Fetched show: \".concat(show.name));\n          return _context.abrupt(\"return\", {\n            show: show\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/wesleybonneville/workspace/nextjstest/pages/p/[id].js"],"names":["useRouter","Layout","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","fetch","res","json","console","log"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGGJ,KAAK,CAACC,IAAN,CAAWI,KAAX,GAAmB;AAAK,IAAA,GAAG,EAAEL,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB,GAA2D,IAH9D,CADgB;AAAA,CAAlB;;AAQAP,IAAI,CAACQ,eAAL,GAAuB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB;AACA;AACQC,UAAAA,EAHa,GAGND,OAAO,CAACE,KAHF,CAGbD,EAHa;AAAA;AAAA,2CAIHE,KAAK,wCAAiCF,EAAjC,EAJF;;AAAA;AAIfG,UAAAA,GAJe;AAAA;AAAA,2CAKFA,GAAG,CAACC,IAAJ,EALE;;AAAA;AAKfZ,UAAAA,IALe;AAOrBa,UAAAA,OAAO,CAACC,GAAR,yBAA6Bd,IAAI,CAACC,IAAlC;AAPqB,2CASd;AAAED,YAAAA,IAAI,EAAJA;AAAF,WATc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAYA,eAAeF,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Layout from \"../../components/MyLayout\";\n\n// export default function Post() {\n//   const router = useRouter();\n\n//   return (\n//     <Layout>\n//       <h1>{router.query.id}</h1>\n//       <p>This is the blog post content.</p>\n//     </Layout>\n//   );\n// }\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, \"\")}</p>\n    {props.show.image ? <img src={props.show.image.medium} /> : null}\n  </Layout>\n);\n\nPost.getInitialProps = async function(context) {\n  // context object contains a query object\n  // destructuring. get id from query\n  const { id } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n\n  console.log(`Fetched show: ${show.name}`);\n\n  return { show };\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}